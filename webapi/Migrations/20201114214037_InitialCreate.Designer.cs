// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiRoutesResponses.Context;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApiAppContext))]
    [Migration("20201114214037_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApiRoutesResponses.Models.User", b =>
                {
                    b.Property<Guid>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            userId = new Guid("3f80c97d-74da-4b1e-8d3f-1a98f562434f"),
                            active = true,
                            dateCreated = new DateTime(2020, 11, 14, 16, 40, 36, 687, DateTimeKind.Local).AddTicks(236),
                            lastName = "last name 1",
                            name = "User 1"
                        },
                        new
                        {
                            userId = new Guid("635b96f4-5ae3-4d21-8da2-268f97127c34"),
                            active = true,
                            dateCreated = new DateTime(2020, 11, 14, 16, 40, 36, 688, DateTimeKind.Local).AddTicks(5190),
                            lastName = "last name 2",
                            name = "User 2"
                        },
                        new
                        {
                            userId = new Guid("d3e2a40d-70cb-4b42-b9a5-e1976dc393d9"),
                            active = true,
                            dateCreated = new DateTime(2020, 11, 14, 16, 40, 36, 688, DateTimeKind.Local).AddTicks(5239),
                            lastName = "last name 3",
                            name = "User 3"
                        });
                });

            modelBuilder.Entity("WebApiRoutesResponses.Models.UserRole", b =>
                {
                    b.Property<Guid>("userRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("userRoleId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            userRoleId = new Guid("c464eb6b-e42d-41ea-a2a0-da281921fadb"),
                            active = true,
                            role = "Admin",
                            userId = new Guid("3f80c97d-74da-4b1e-8d3f-1a98f562434f")
                        },
                        new
                        {
                            userRoleId = new Guid("94b8dee4-2dbb-49b3-af20-39140fd04881"),
                            active = true,
                            role = "User",
                            userId = new Guid("635b96f4-5ae3-4d21-8da2-268f97127c34")
                        },
                        new
                        {
                            userRoleId = new Guid("14cb2cb5-caa9-4076-bd6e-91ecfc560a3d"),
                            active = true,
                            role = "Suport",
                            userId = new Guid("d3e2a40d-70cb-4b42-b9a5-e1976dc393d9")
                        });
                });

            modelBuilder.Entity("WebApiRoutesResponses.Models.UserRole", b =>
                {
                    b.HasOne("WebApiRoutesResponses.Models.User", "user")
                        .WithOne("userRole")
                        .HasForeignKey("WebApiRoutesResponses.Models.UserRole", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
