// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiRoutesResponses.Context;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApiAppContext))]
    [Migration("20201114222503_addNewColumns")]
    partial class addNewColumns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApiRoutesResponses.Models.User", b =>
                {
                    b.Property<Guid>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            userId = new Guid("858d3854-62ad-49dc-a8ab-2680130c5aef"),
                            active = true,
                            dateCreated = new DateTime(2020, 11, 14, 17, 25, 2, 719, DateTimeKind.Local).AddTicks(7008),
                            lastName = "last name 1",
                            name = "User 1"
                        },
                        new
                        {
                            userId = new Guid("47e8eee4-c58c-464b-9bb3-4f1d967a962a"),
                            active = true,
                            dateCreated = new DateTime(2020, 11, 14, 17, 25, 2, 720, DateTimeKind.Local).AddTicks(8886),
                            lastName = "last name 2",
                            name = "User 2"
                        },
                        new
                        {
                            userId = new Guid("94b56db9-0d25-4efd-9f7a-8e5af20a9b41"),
                            active = true,
                            dateCreated = new DateTime(2020, 11, 14, 17, 25, 2, 720, DateTimeKind.Local).AddTicks(8926),
                            lastName = "last name 3",
                            name = "User 3"
                        });
                });

            modelBuilder.Entity("WebApiRoutesResponses.Models.UserRole", b =>
                {
                    b.Property<Guid>("userRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("userRoleId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            userRoleId = new Guid("abb3743e-3408-447f-85df-09895f6bfc42"),
                            active = true,
                            role = "Admin",
                            userId = new Guid("858d3854-62ad-49dc-a8ab-2680130c5aef")
                        },
                        new
                        {
                            userRoleId = new Guid("a5625ff5-f379-4413-bcef-625dc9fa43ea"),
                            active = true,
                            role = "User",
                            userId = new Guid("47e8eee4-c58c-464b-9bb3-4f1d967a962a")
                        },
                        new
                        {
                            userRoleId = new Guid("9203bc79-4d90-4bc2-9e1b-af0d24f0b416"),
                            active = true,
                            role = "Suport",
                            userId = new Guid("94b56db9-0d25-4efd-9f7a-8e5af20a9b41")
                        });
                });

            modelBuilder.Entity("WebApiRoutesResponses.Models.UserRole", b =>
                {
                    b.HasOne("WebApiRoutesResponses.Models.User", "user")
                        .WithOne("userRole")
                        .HasForeignKey("WebApiRoutesResponses.Models.UserRole", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
